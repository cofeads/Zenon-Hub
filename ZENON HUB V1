--[[
Made with Love
By cofead#7431
https://discord.gg/QKmhhq4MaR



]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v72=v2(v0(v20,16));if v19 then local v77=0;local v78;while true do if (v77==1) then return v78;end if (v77==0) then v78=v5(v72,v19);v19=nil;v77=1;end end else return v72;end end end);local function v21(v22,v23,v24)if v24 then local v73=0 + 0 ;local v74;while true do if (v73==0) then v74=(v22/((1 + 1)^(v23-1)))%(((2 + 0) -0)^(((v24-(1 + 0 + 0)) -(v23-(1 + 0))) + (1765 -(5 + 1759)))) ;return v74-(v74%(2 -1)) ;end end else local v75=1571 -(1101 + 470) ;local v76;while true do if (v75==(0 + 0 + (259 -(129 + 130)))) then v76=((4 -3) + 1)^(v23-(1 + 0)) ;return (((v22%(v76 + v76))>=v76) and (1 + 0)) or (0 + 0) ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (9 -7) ;return (v40 * (482 -226)) + v39 ;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + (3 -0) );v18=v18 + (9 -5) ;return (v44 * 16777216) + (v43 * 65536) + (v42 * (229 + 27)) + v41 ;end local function v28()local v45=0 -0 ;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v45==(1 + 1)) then v50=v21(v47,21,521 -((738 -424) + 176) );v51=((v21(v47,32)==((1903 -(573 + 160)) -(529 + 640))) and  -(1 -0)) or (3 -2) ;v45=3;end if ((0 -0)==v45) then v46=v27();v47=v27();v45=1 + 0 ;end if (v45==(1138 -(209 + 926))) then if (v50==(85 -(39 + 46))) then if (v49==(0 -0)) then return v51 * (1567 -(119 + 509 + 939)) ;else v50=(1881 -781) -(309 + 790) ;v48=1941 -((1614 -(1169 + 15)) + 1511) ;end elseif (v50==(975 + 1072)) then return ((v49==(0 + 0)) and (v51 * (1/0))) or (v51 * NaN) ;end return v8(v51,v50-(2701 -1678) ) * (v48 + (v49/(2^(143 -91)))) ;end if (((5245 -4049) -(688 + 507))==v45) then v48=2 -1 ;v49=(v21(v47,1522 -(1488 + 33) ,(1956 -(973 + 977)) + 14 ) * (2^(2017 -(381 + 1604)))) + v46 ;v45=1564 -((1524 -662) + 700) ;end end end local function v29(v30)local v52=0 -0 ;local v53;local v54;while true do if (v52==(1 -0)) then v53=v3(v16,v18,(v18 + v30) -(2 -1) );v18=v18 + v30 ;v52=2 + 0 ;end if (3==v52) then return v6(v54);end if (v52==((592 + 1186) -(1355 + 423))) then v53=nil;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v52=2 -1 ;end if (v52==(4 -(1 + 1))) then v54={};for v79=1, #v53 do v54[v79]=v2(v1(v3(v53,v79,v79)));end v52=1460 -(722 + 735) ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 -0 ;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55~=2) then else v60=nil;v61=nil;v55=14 -11 ;end if (v55~=0) then else v56=0;v57=nil;v55=1;end if (v55~=(3 + 0)) then else v62=nil;while true do local v81=0 + 0 ;local v82;while true do if (v81==(0 -0)) then v82=0;while true do if ((0 -0)~=v82) then else if (v56==3) then local v102=0;local v103;while true do if (v102==(409 -(279 + 130))) then v103=0;while true do local v111=0 -0 ;while true do if (v111~=(0 -0)) then else if (v103~=1) then else return v60;end if (v103==0) then local v124=0 -0 ;while true do if (v124==(1 + 0)) then v103=1;break;end if ((19 -(7 + 12))~=v124) then else for v203=1,v27() do v58[v203-(779 -(211 + 567)) ]=v33();end for v205=1 + 0 ,v27() do v59[v205]=v27();end v124=1 + 0 ;end end end break;end end end break;end end end if (v56~=1) then else local v104=0 + 0 ;while true do if (v104~=1) then else v62={};v56=5 -3 ;break;end if (v104==(1770 -(1647 + 123))) then local v108=0;while true do if (v108~=(1040 -(146 + 894))) then else v60={v57,v58,nil,v59};v61=v27();v108=1;end if (v108~=(1 -0)) then else v104=1;break;end end end end end v82=1;end if (v82~=(4 -3)) then else if (v56==0) then v57={};v58={};v59={};v56=1 + 0 ;end if (2==v56) then local v105=0 + 0 ;local v106;while true do if (v105==0) then v106=0;while true do if (v106~=1) then else for v113=1,v27() do local v114=0;local v115;local v116;while true do if (v114==0) then v115=0 -0 ;v116=nil;v114=1 -0 ;end if (v114==1) then while true do if (v115==(0 -0)) then v116=v25();if (v21(v116,1 + 0 ,1 + 0 )~=(0 + 0)) then else local v208=0;local v209;local v210;local v211;local v212;local v213;while true do if (v208==1) then v211=nil;v212=nil;v208=483 -(83 + 398) ;end if (v208==2) then v213=nil;while true do if (v209~=(4 -3)) then else local v277=0;while true do if (v277==1) then v209=2;break;end if (v277==0) then v212=nil;v213=nil;v277=1;end end end if (v209==(1 + 1)) then while true do if (v210==0) then local v282=1172 -(770 + 402) ;while true do if (v282==1) then v210=465 -(383 + 81) ;break;end if (v282==(981 -(720 + 261))) then v211=v21(v116,2 + 0 ,3);v212=v21(v116,4,12 -6 );v282=1;end end end if (1==v210) then local v283=0;local v284;while true do if (v283==0) then v284=0;while true do if (v284~=1) then else v210=1772 -(1649 + 121) ;break;end if (v284~=0) then else local v319=0 + 0 ;while true do if (v319==1) then v284=1;break;end if (v319==0) then v213={v26(),v26(),nil,nil};if (v211==(0 + 0)) then local v329=0;local v330;local v331;while true do if (v329==(1 -0)) then while true do if (v330==0) then v331=0 + 0 ;while true do if (v331~=(1458 -(245 + 1213))) then else v213[850 -(519 + 328) ]=v26();v213[4]=v26();break;end end break;end end break;end if ((658 -(484 + 174))==v329) then local v338=0;while true do if (v338==(1 + 0)) then v329=1;break;end if (v338==(0 + 0)) then v330=0;v331=nil;v338=1 + 0 ;end end end end elseif (v211==1) then v213[1 + 2 ]=v27();elseif (v211==2) then v213[3]=v27() -((1 + 1)^(1240 -(640 + 584))) ;elseif (v211==(1672 -(354 + 1315))) then local v342=0;local v343;local v344;while true do if (v342==(210 -(121 + 88))) then while true do if (v343~=0) then else v344=0;while true do if ((263 -(222 + 41))~=v344) then else v213[3]=v27() -(2^(4 + 12)) ;v213[4]=v26();break;end end break;end end break;end if (v342==(0 -0)) then v343=0 + 0 ;v344=nil;v342=2 -1 ;end end end v319=659 -(500 + 158) ;end end end end break;end end end if (2~=v210) then else local v285=0 -0 ;local v286;while true do if ((430 -(237 + 193))~=v285) then else v286=697 -(650 + 47) ;while true do if (v286==1) then v210=7 -4 ;break;end if (v286==0) then if (v21(v212,3 -2 ,451 -(415 + 35) )~=1) then else v213[1 + 1 ]=v62[v213[2 + 0 ]];end if (v21(v212,5 -3 ,2)==1) then v213[839 -(749 + 87) ]=v62[v213[3]];end v286=1;end end break;end end end if (v210~=(3 + 0)) then else if (v21(v212,3,827 -(261 + 563) )~=1) then else v213[4]=v62[v213[5 -1 ]];end v57[v113]=v213;break;end end break;end if (v209==(0 -0)) then local v278=0 -0 ;while true do if (v278==0) then v210=1347 -(153 + 1194) ;v211=nil;v278=1 + 0 ;end if (v278~=1) then else v209=1;break;end end end end break;end if (v208==0) then v209=0 -0 ;v210=nil;v208=2 -1 ;end end end break;end end break;end end end v56=239 -(164 + 72) ;break;end if (v106==(0 + 0)) then for v117=1 -0 ,v61 do local v118=0 -0 ;local v119;local v120;local v121;local v122;while true do if (v118==0) then v119=0;v120=nil;v118=777 -(637 + 139) ;end if (v118==(1904 -(1805 + 97))) then while true do if (v119==(144 -(35 + 108))) then v122=nil;while true do if (v120==(1 -0)) then if (v121==(1 + 0)) then v122=v25()~=(0 + 0) ;elseif (v121==(3 -1)) then v122=v28();elseif (v121==(1090 -(965 + 122))) then v122=v29();end v62[v117]=v122;break;end if (v120~=(0 -0)) then else local v215=0;local v216;while true do if (v215==0) then v216=0;while true do if (1==v216) then v120=2 -1 ;break;end if (v216==(0 -0)) then local v279=148 -(37 + 111) ;while true do if (v279~=(1 + 0)) then else v216=1;break;end if (v279==0) then v121=v25();v122=nil;v279=2 -1 ;end end end end break;end end end end break;end if (v119==(277 -(93 + 184))) then local v207=0 -0 ;while true do if (v207==1) then v119=1;break;end if (v207==0) then v120=0 + 0 ;v121=nil;v207=1;end end end end break;end if ((1 + 0)~=v118) then else v121=nil;v122=nil;v118=3 -1 ;end end end v60[3 + 0 ]=v25();v106=1;end end break;end end end break;end end break;end end end break;end if (v55==(1160 -(514 + 645))) then v58=nil;v59=nil;v55=2 -0 ;end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v66=0;local v67;local v68;local v69;local v70;local v71;while true do if (v66==0) then v67=1;v68= -1;v66=1;end if (v66==3) then A,B=v32(v11(v71));if  not A[1] then local v93=0;local v94;while true do if (0==v93) then v94=v35[4][v67] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v66==1) then v69={...};v70=v12("#",...) -1 ;v66=2;end if (2==v66) then v71=nil;v71=function()local v83=v63;local v84=v64;local v85=v65;local v86=v32;local v87={};local v88={};local v89={};for v95=0 + 0 ,v70 do if ((v95>=v85) or ((2882 + 338)<(3048 -1016))) then v87[v95-v85 ]=v69[v95 + (2 -1) ];else v89[v95]=v69[v95 + 1 ];end end local v90=(v70-v85) + 1 + 0 ;local v91;local v92;while true do local v96=0 -(1920 -(345 + 1575)) ;local v97;while true do if ((v96==(0 + 0)) or (3492<=2366)) then v97=(1803 -(558 + 1245)) -0 ;while true do if ((v97==((2 + 2) -3)) or ((78 + 1675)>=(1215 + 3011))) then if ((v92<=13) or ((128 + 1095)>(4706 -(236 + 96 + 1633)))) then if (((2574 -(1321 + 284))==(2792 -(548 + 1275))) and (v92<=6)) then if (((1021 -(116 + 244))<=(1269 + 789)) and (v92<=((2 -0) + 0))) then if (((1977 -(4 + 10))>=(670 + 81 + 802)) and (v92<=(0 + 0))) then if ((v91[2]==v89[v91[4]]) or ((5018 -(55 + 536 + 414))<=((199 + 372) -(120 + 74)))) then v67=v67 + 1 ;else v67=v91[9 -6 ];end elseif ((v92==(1 + 0)) or (502==3156)) then v89[v91[2 + 0 ]]=v91[1646 -(493 + 1150) ];else v89[v91[1636 -(1035 + 599) ]]();end elseif (((4480 -(778 + 532))<=((2134 + 3066) -(30 + 806))) and (v92<=(10 -6))) then if (((4853 -(330 + 37 + 1462))>=(926 + 1973)) and (v92>(10 -7))) then local v128=0;local v129;local v130;local v131;while true do if ((v128==(1 + 0)) or (4032<(701 + 1225))) then v131=nil;while true do if ((v129==(1235 -(261 + 973))) or (1911>(2709 + 1123))) then while true do if ((2309<=(1501 + 888)) and (v130==0)) then v131=v91[284 -(149 + 133) ];v89[v131]=v89[v131](v13(v89,v131 + (386 -(257 + 128)) ,v68));break;end end break;end if (((1100 + 357 + 1368)<=(2784 + 1612)) and (v129==(0 -0))) then local v217=0;while true do if ((v217==(466 -((1006 -(102 + 818)) + 379))) or ((428 + 7)>(3302 -1394))) then v129=1;break;end if (((2346 -(868 + 119))>=((300 + 1651) -(1378 + 8))) and (v217==(0 + 0 + 0))) then v130=0 -0 ;v131=nil;v217=1 + 0 ;end end end end break;end if ((v128==(0 -(0 -0))) or ((2975 -((1858 -(306 + 1198)) + 171))==(1783 + 2782))) then v129=(0 -0) -0 ;v130=nil;v128=3 -2 ;end end else v89[v91[2]]=v89[v91[727 -(428 + (813 -517)) ]];end elseif ((560<=(34 + 2453)) and (v92==(1 + 4))) then v89[v91[(40 + 1167) -(923 + 282) ]][v91[3]]=v91[4];else local v136=0 + 0 ;local v137;local v138;local v139;local v140;while true do if (((1988 -1111)<(1082 + 1747)) and (v136==2)) then while true do if ((0==v137) or (4824==(9539 -5177))) then local v218=0 -0 ;while true do if ((v218==(1641 -(112 + 1528))) or ((12338 -(15577 -7518))==1610)) then v137=(71 -27) -(36 + 7) ;break;end if (((2452 -(349 + 72))==2031) and (v218==((2893 -1833) -((1353 -(414 + 847)) + 968)))) then v138=0;v139=nil;v218=2 -1 ;end end end if ((v137==((2 -1) -0)) or ((207 + 1146)>(5830 -2715))) then v140=nil;while true do if ((v138==(408 -(213 + 195))) or ((2217 + 720)>4396)) then local v247=0 -0 ;while true do if ((v247==(46 -((1356 -(869 + 467)) + 26))) or ((18374 -(14958 -(510 + 862)))<(2868 + 106))) then local v280=0 -0 ;while true do if (((2672 -821)>=(2767 -1330)) and (v280==1)) then v247=1 + 0 ;break;end if ((v280==(739 -(435 + 304))) or ((2744 + 1447)<=(729 + 3203))) then v139=v91[732 -(23 + 707) ];v140={};v280=1;end end end if ((v247==((5 -3) -1)) or ((9000 -4343)<(4268 -(300 + 432)))) then v138=1 + 0 + 0 ;break;end end end if ((3748<=((5839 -(205 + 155)) -(885 + 58))) and (v138==(1 + 0))) then for v265=948 -(415 + 532) , #v88 do local v266=1895 -(1095 + 800) ;local v267;local v268;while true do if ((0==v266) or ((7705 -3339)<=(256 + 2021))) then v267=0 -(0 + 0) ;v268=nil;v266=1 + 0 ;end if ((v266==(1 + 0)) or ((6206 -4219)<=((1812 -753) -390))) then while true do if ((v267==((0 -0) -0)) or ((487 + 196)>4122)) then v268=v88[v265];for v300=0 + 0 , #v268 do local v301=0 + 0 ;local v302;local v303;local v304;local v305;while true do if ((v301==(853 -(795 + 9 + 49))) or (((1795 -(543 + 1021)) + 4495)<=(1483 + 2391))) then v302=208 -(34 + 174) ;v303=nil;v301=1160 -(739 + (971 -551)) ;end if ((v301==1) or ((3657 -(1324 + 381))<=1090)) then v304=nil;v305=nil;v301=1 + 1 ;end if ((v301==(1 + 1 + 0)) or (3041<=((2859 -(19 + 1120)) + 348))) then while true do if ((v302==1) or (905>(2839 -((1875 -(1551 + 272)) + 586)))) then v305=v303[477 -(196 + 279) ];if (((406 + 1292)<(8272 -5975)) and (v304==v89) and (v305>=v139)) then local v332=0 + 0 ;local v333;while true do if (((5692 -3807)<=((3208 + 7687) -6456)) and (v332==((462 -358) -(85 + 19)))) then v333=0 -0 ;while true do if (((3420 + 745)>(96 + 65)) and (v333==(0 + 0))) then v140[v305]=v304[v305];v303[1]=v140;break;end end break;end end end break;end if ((v302==(402 -((109 -65) + 358))) or ((6486 -4846)==(4444 -(249 + 903)))) then v303=v268[v300];v304=v303[1 + 0 ];v302=1;end end break;end end end break;end end break;end end end break;end end break;end end break;end if ((v136==(1205 -(267 + 938))) or (4480==4623)) then v137=1766 -(7 + 1759) ;v138=nil;v136=1485 -(130 + 1354) ;end if (((1 + 0)==v136) or ((12071 -8497)<=(10334 -(7562 -(421 + 172))))) then v139=nil;v140=nil;v136=4 -2 ;end end end elseif (((4591 -3007)<(2860 -(158 + 310))) and (v92<=9)) then if (((183 + 364)<(400 + 3536)) and (v92<=((11 -6) + 2))) then v89[v91[1 + 1 ]]=v91[3]~=((1807 -(94 + 1713)) + 0) ;elseif ((1722<=(4482 -(492 + 2))) and (v92==8)) then v89[v91[1 + 1 ]][v91[6 -(3 + 0) ]]=v89[v91[15 -11 ]];else v89[v91[854 -(251 + 601) ]]={};end elseif ((v92<=(28 -17)) or ((464 + 635)>=3716)) then if ((v92>(2 + 1 + (1213 -(726 + 480)))) or (3507>=(8788 -3884))) then local v144=149 -(138 + 11) ;local v145;local v146;while true do if ((v144==1) or ((1837 -(1453 -1002))>=3265)) then while true do if ((2269<=(6912 -3742)) and (v145==(639 -(572 + 67)))) then v146=v91[759 -(469 + 288) ];v89[v146](v13(v89,v146 + (248 -(184 + 63)) ,v91[3]));break;end end break;end if ((((26108 -14700) -7952)<=(14328 -10848)) and (v144==0)) then v145=0 -0 ;v146=nil;v144=1261 -(620 + 640) ;end end else v89[v91[2 + 0 ]]=v34(v84[v91[3]],nil,v37);end elseif (((5386 -2337)>(2852 -1246)) and (v92>12)) then for v201=v91[(2 -1) + 1 ],v91[3] do v89[v201]=nil;end else v89[v91[1 + 1 ]]=v36[v91[2 + 1 ]];end elseif (((1915 + 125)>=950) and (v92<=(1663 -(276 + 1367)))) then if (((4390 -2037)<(6106 -2819)) and (v92<=(54 -38))) then if ((v92<=(1758 -(736 + (2619 -(330 + 1281))))) or ((3113 + 787)==(529 -(166 + 177)))) then if ((4928>=(501 -328)) and (v89[v91[8 -(5 + 1) ]]==v91[11 -7 ])) then v67=v67 + (918 -(432 + 485)) ;else v67=v91[958 -(918 + 37) ];end elseif ((3932>=(1598 + (1617 -(10 + 1040)))) and (v92==(1904 -(939 + 950)))) then local v151=1114 -(844 + 270) ;local v152;local v153;local v154;local v155;while true do if ((3952>791) and (v151==(1962 -(223 + 1737)))) then while true do if ((v152==(0 + 0)) or ((16681 -12463)==3671)) then local v220=0;while true do if ((v220==(0 + (461 -(454 + 7)))) or ((17203 -12359)<=4246)) then v153=v91[8 -6 ];v154=v89[v153];v220=(2 -0) -(1 + 0) ;end if ((v220==(1 + 0)) or ((694 + 3118)>(2708 + 1719))) then v152=1259 -((1962 -868) + 164) ;break;end end end if ((v152==(1 -0)) or ((1922 -(1137 + (1452 -(324 + 517))))>((4868 -2156) -(947 + 199)))) then v155=v91[1 + 2 + 0 ];for v237=1224 -(148 + 1075) ,v155 do v154[v237]=v89[v153 + v237 ];end break;end end break;end if ((v151==(371 -(41 + 330))) or ((180 + 702 + 582 + 356)<=542)) then v152=0 + 0 ;v153=nil;v151=2 -1 ;end if (((4274 -1601)<=4074) and (v151==(1 + 0))) then v154=nil;v155=nil;v151=7 -5 ;end end else local v156=0;local v157;local v158;local v159;local v160;local v161;local v162;while true do if ((v156==(7 -5)) or ((5129 -2711)>=(857 + 2400))) then v161=nil;v162=nil;v156=10 -7 ;end if (((1542 -(224 + 492))<(3185 -(50 + 220))) and (v156==((921 + 208) -(767 + 359)))) then while true do if ((v157==2) or ((6505 -2891)>4550)) then v162=nil;while true do if (((0 -0)==v158) or ((5262 -(632 + 814))<(675 + 930))) then local v250=0 -0 ;while true do if ((2730<(4615 -(1458 + 228))) and (1==v250)) then v158=800 -(112 + 687) ;break;end if (((381 + (2561 -1863))<=(999 + 661)) and (v250==(0 -0))) then local v281=0 + 0 ;while true do if ((v281==(0 + 0)) or (23>((7238 -3960) -((229 -121) + (1182 -(143 + 768)))))) then v159=v91[2 + 0 ];v160,v161=v86(v89[v159]());v281=1;end if (((1610 -(661 + (775 -304)))<=(6382 -2137)) and (v281==(1 + (0 -0)))) then v250=1 -0 ;break;end end end end end if ((2071>=(680 + (2020 -(236 + 1680)))) and (v158==(1 + 1))) then for v269=v159,v68 do local v270=(961 + 700) -(1442 + 219) ;local v271;while true do if ((v270==(0 + 0)) or ((648 + 900)>=(2831 + 411))) then v271=0;while true do if (((5562 -(4852 -(472 + 614)))>=(161 -51)) and (v271==(1658 -(555 + 1103)))) then v162=v162 + (2 -1) ;v89[v269]=v160[v162];break;end end break;end end end break;end if ((258<(9247 -(7036 -(198 + 944)))) and (v158==(1 -0))) then local v251=0 + 0 ;local v252;while true do if ((v251==(0 + 0)) or ((1874 -(49 + 107))==4334)) then v252=0;while true do if (((417 + 927)<=(4628 -1209)) and (v252==1)) then v158=1830 -(1232 + 5 + 591) ;break;end if ((v252==(660 -(338 + 322))) or ((6103 -3937)>=(4203 -1752))) then v68=(v161 + v159) -(1 + 0) ;v162=0 + 0 ;v252=1 -0 ;end end break;end end end end break;end if ((v157==(0 + 0)) or ((4518 -(500 + 151))==4038)) then local v222=(92 -44) -(12 + 36) ;while true do if ((v222==((1447 -(853 + 594)) + 0)) or ((1037 + 755)>(5220 -(1318 + 665)))) then v158=1025 -(263 + 762) ;v159=nil;v222=2 -(3 -2) ;end if ((v222==(1 + 0)) or ((721 + 2589)>=(1817 + 3111))) then v157=1 + 0 ;break;end end end if ((v157==(1 + 0)) or ((6531 -2818)>=(5690 -(115 + 1068)))) then local v223=0 -(399 -(252 + 147)) ;while true do if (((1744 -(341 + 892))<2240) and (v223==(2 -1))) then v157=3 -1 ;break;end if ((v223==0) or ((2018 + (411 -100))<(1403 + 512))) then v160=nil;v161=nil;v223=2 -1 ;end end end end break;end if (((1 -0)==v156) or ((1909 -(38 + 80))>(3473 -(334 + 805)))) then v159=nil;v160=nil;v156=2;end if ((v156==(1530 -(1006 + 524))) or ((1517 + 728)>(12085 -8273))) then v157=0;v158=nil;v156=1 + 0 ;end end end elseif (((2088 -(39 + 746))<=(2398 + 2549)) and (v92<=18)) then if ((v92>(52 -35)) or ((4459 -(272 + 711))==3524)) then do return;end else local v163=0;local v164;local v165;local v166;local v167;local v168;while true do if ((v163==((3296 -(1575 + 227)) -(1471 + 21))) or ((699 + 381 + 585)>((2986 -(69 + 1611)) + 1885))) then v168=nil;while true do if ((v164==(1188 -(907 + 279))) or ((4136 -(1061 + 531))>=(2329 + 491))) then while true do if ((1585<=(12013 -7588)) and (v165==1)) then local v253=0 -0 ;local v254;while true do if (((3908 -(248 + 964))==(7871 -5175)) and (v253==(0 -0))) then v254=1045 -(965 + 80) ;while true do if ((v254==1) or ((9497 -(15260 -9940))==(122 + 141 + 17))) then v165=4 -(5 -3) ;break;end if ((((5671 -2226) -(670 + 613))==2162) and (v254==0)) then local v290=67 -(7 + 60) ;while true do if ((1223>=(187 -142)) and (v290==(1 + 0))) then v254=1417 -(1316 + 100) ;break;end if (((4949 -(852 + 248))>(1711 -(540 + 1017))) and (v290==(0 -0))) then v168={};v167=v10({},{__index=function(v306,v307)local v309=0 -0 ;local v310;local v311;local v312;while true do if ((v309==(1 + 0)) or ((11635 -(14337 -7157))<=(1490 + 1988))) then v312=nil;while true do if ((v310==(71 -(20 + 50))) or ((2542 + 664)<1034)) then while true do if ((111<(7440 -4409)) and (v311==(0 -0))) then local v339=1359 -(962 + (454 -(31 + 26))) ;local v340;while true do if ((1425==1425) and (0==v339)) then v340=0;while true do if ((v340==(0 -0)) or (3927<(3267 -1242))) then local v350=0 + 0 ;while true do if (((1924 -(917 + 1007))==v350) or ((1970 + 2483)<=(4818 -(639 + 1156)))) then v312=v168[v307];return v312[1][v312[3 -1 ]];end end end end break;end end end end break;end if ((v310==(0 -0)) or ((2586 + 1441)<(248 + 275 + 138))) then v311=283 -(122 + 3 + 158) ;v312=nil;v310=1;end end break;end if (((1369 -660)<(4007 -(740 + 16))) and (v309==0)) then v310=0 + 0 + 0 ;v311=nil;v309=2 -1 ;end end end,__newindex=function(v306,v307,v308)local v313=20 -(8 + 12) ;local v314;local v315;while true do if ((4759>(990 -310)) and ((1575 -(860 + 715))==v313)) then v314=549 -(110 + 439) ;v315=nil;v313=(518 -(178 + 337)) -2 ;end if (((1187 -(24 + 22))<2955) and (v313==(2 -1))) then while true do if (((14152 -(5373 + 5118))>=(3102 -(265 + 347))) and ((0 + 0)==v314)) then v315=v168[v307];v315[1][v315[1 + 1 ]]=v308;break;end end break;end end end});v290=1 -0 ;end end end end break;end end end if ((((3737 -(27 + 1943)) -(171 + 192))>(2469 -1910)) and (v165==0)) then local v255=0 -(1099 -(653 + 446)) ;local v256;while true do if (((716 + 948)<=(1149 + 2388)) and (v255==0)) then v256=0;while true do if ((0==v256) or ((10 + 62)==(6156 -3632))) then v166=v84[v91[3 + 0 ]];v167=nil;v256=1036 -(537 + 498) ;end if ((v256==(1 + 0)) or (1327>=4331)) then v165=1 + 0 ;break;end end break;end end end if ((380==(380 + 0)) and (v165==(5 -3))) then for v272=1 + 0 ,v91[6 -2 ] do local v273=(900 -(135 + 765)) -(987 -(225 + 762)) ;local v274;local v275;local v276;while true do if ((v273==1) or ((206 + 93 + 1942)>=(1073 + 2183))) then v276=nil;while true do if (((16033 -11316)==(8802 -4085)) and (v274==(0 + 0))) then local v297=1350 -(501 + 849) ;while true do if (((658 + 784)<(1487 + 1150)) and (v297==(0 -0))) then v275=0;v276=nil;v297=1 -0 ;end if (((2357 + 1272)<(6429 -((1247 -(442 + 760)) + 1573))) and (v297==1)) then v274=1;break;end end end if (((4850 -3664)<=(2515 + 800)) and (v274==(1 + 0))) then while true do if ((v275==(0 -0)) or (((399 + 2503) -(767 + 795))==520)) then local v316=0;local v317;while true do if ((v316==0) or ((2206 + 74)<(2590 -710))) then v317=0;while true do if (((3216 -(3617 -(781 + 375)))<=(2038 + 700)) and (v317==((148 -(71 + 76)) + 0))) then v275=1;break;end if ((v317==(0 -(0 + 0))) or ((4193 -(266 + 399))>=((12071 -6683) -(684 + 297)))) then v67=v67 + (123 -(48 + 74)) ;v276=v83[v67];v317=(731 -(114 + 510)) -(102 + 4) ;end end break;end end end if (((2334 + 1490)>=(4882 -(22 + 1646))) and (v275==(1 -0))) then if (((1258 + 1914 + 1325)==(4997 -(471 + 29))) and (v276[3 -2 ]==(4 -1))) then v168[v272-1 ]={v89,v276[2 + 1 ]};else v168[v272-(1 + 0 + 0) ]={v36,v276[1573 -((3215 -(235 + 1717)) + 307) ]};end v88[ #v88 + 1 ]=v168;break;end end break;end end break;end if (((3611 -(183 + 248))>=(2343 -(59 + 630))) and (v273==0)) then v274=297 -(75 + 222) ;v275=nil;v273=1611 -(803 + 807) ;end end end v89[v91[2]]=v34(v166,v167,v37);break;end end break;end if ((v164==(0 -0)) or ((2131 -(1543 + 231))>(4452 -(1415 + 114)))) then local v224=882 -(19 + 8 + 855) ;while true do if (((9275 -6452)==2823) and (v224==(12 -(4 + 7)))) then v164=1 + 0 + 0 ;break;end if ((v224==0) or ((50 + 1630)==(1726 + (2883 -(111 + 537))))) then v165=0 -0 ;v166=nil;v224=1;end end end if ((v164==(2 -1)) or ((5081 -(267 + 1032))<=(880 -239))) then v167=nil;v168=nil;v164=2;end end break;end if ((v163==(0 + 0)) or ((799 + 1232)<=(460 -((138 -66) + 221)))) then v164=0;v165=nil;v163=1;end if ((2462>(1804 -(295 + 1115))) and (v163==(1210 -(492 + 717)))) then v166=nil;v167=nil;v163=339 -(312 + 25) ;end end end elseif ((v92>(796 -(8 + 769))) or ((3774 -(379 + 449))<2747)) then local v169=(535 -(129 + 406)) + 0 ;local v170;local v171;local v172;while true do if (((2451 -(416 + 328))>((709 + 2667) -1916)) and (v169==((1555 -(473 + 1081)) -0))) then v172=nil;while true do if ((v170==(0 + 0)) or ((5088 -3326)==(8057 -3523))) then local v225=1051 -((380 -299) + 970) ;while true do if ((772<=(18532 -13985)) and ((1 + 0 + 0)==v225)) then v170=1 + 0 ;break;end if ((v225==(0 -0)) or ((968 + 1284)<=(170 + 14))) then v171=v91[2];v172=v89[v171];v225=1532 -(426 + 1105) ;end end end if ((v170==(1 + 0)) or (986<(301 -123))) then for v240=v171 + 1 ,v91[6 -(6 -3) ] do v7(v172,v89[v240]);end break;end end break;end if (((10 + 983)<(466 + 1204)) and ((0 -0)==v169)) then v170=0 -0 ;v171=nil;v169=(94 -(87 + 6)) -0 ;end end else local v173=0 -0 ;local v174;local v175;local v176;local v177;local v178;while true do if ((131<((2326 -(124 + 582)) -895)) and (v173==(0 + 0))) then v174=0;v175=nil;v173=1 + 0 ;end if (((2206 -1615)<4398) and (v173==(1 + 0))) then v176=nil;v177=nil;v173=5 -3 ;end if (((3709 -2688)<=(3290 -(2583 -(401 + 332)))) and (v173==(2 + 0))) then v178=nil;while true do if (((3763 -(1083 + 602))<=3445) and (v174==(0 -0))) then local v226=1037 -(211 + 826) ;while true do if ((v226==(2 -1)) or ((8342 -5194)<=(93 + 1401))) then v174=1 + 0 ;break;end if (((97 + 100 + (1251 -(1129 + 54)))<(1528 + 2768)) and (v226==(1571 -(926 + 645)))) then v175=v91[(7 -4) -1 ];v176,v177=v86(v89[v175](v13(v89,v175 + 1 ,v91[6 -(3 + 0) ])));v226=1;end end end if ((v174==(961 -(885 + 75))) or (3964==(7715 -5132))) then local v227=0 + 0 ;while true do if ((v227==(651 -(497 + 153))) or ((1 -0)>((9984 -7691) -((389 -(40 + 139)) + (1893 -(268 + 661)))))) then v174=1 + 1 ;break;end if ((((1080 + 814) -(902 + 527))==((1333 + 279) -(2797 -1650))) and (v227==(0 -0))) then v68=(v177 + v175) -(1 -0) ;v178=1507 -(425 + 1082) ;v227=(3 -1) -(2 -1) ;end end end if ((4807>=(1232 -970)) and (v174==(1331 -((968 -712) + 1073)))) then for v241=v175,v68 do local v242=1942 -(1882 + 60) ;local v243;local v244;while true do if (((5211 -3386)>(1392 -842)) and (v242==(1 + 0))) then while true do if (((442 -(91 + 4))==(104 + 243)) and (v243==0)) then v244=0 -0 ;while true do if ((4247>(6481 -2557)) and ((0 + 0)==v244)) then v178=v178 + (3 -2) ;v89[v241]=v176[v178];break;end end break;end end break;end if (((8002 -5640)<(9416 -4450)) and (v242==0)) then v243=0 + 0 ;v244=nil;v242=710 -(497 + 212) ;end end end break;end end break;end end end elseif ((v92<=24) or (((2760 -1347) + 346)>(6111 -(713 + 685)))) then if (((3990 -(879 + 1002))<=((4189 + 1255) -((1366 -860) + 1019))) and (v92<=(34 -12))) then if (((2921 -694)>=(2079 -1424)) and (v92==((27 + 16) -(29 -7)))) then local v179=0 -0 ;local v180;local v181;local v182;while true do if (((1703 + 46)==(1983 -(64 + (1141 -(579 + 392))))) and (v179==(0 + 0))) then v180=1995 -(1742 + 253) ;v181=nil;v179=1 -0 ;end if ((((7727 -(251 + 1590)) -(797 + 370))>=((3599 + 1393) -(173 + 543))) and (v179==(1835 -((171 -(72 + 49)) + 1784)))) then v182=nil;while true do if (((8465 -5844)>(456 + 1346)) and (v180==1)) then while true do if ((1291<2545) and (v181==(30 -(29 + 1)))) then v182=v91[2 + 0 ];v89[v182]=v89[v182]();break;end end break;end if (((5195 -((2039 -(643 + 553)) + (1613 -1177)))>(3337 -(17 + 21))) and (v180==(1931 -((339 -173) + 1765)))) then local v228=0 -(1840 -(1815 + 25)) ;while true do if ((v228==1) or (((20769 -(257 + 495)) -15775)<=(928 -(385 + 123)))) then v180=3 -2 ;break;end if (((1628 + 52)<=4492) and (v228==(1346 -(327 + 1019)))) then v181=0;v182=nil;v228=1;end end end end break;end end else local v183=0 -(0 -0) ;local v184;local v185;local v186;while true do if ((v183==(2 -1)) or ((13906 -10563)<1010)) then v186=nil;while true do if ((v184==0) or ((2715 -(2314 -(784 + 173)))<(786 -501))) then local v229=0 -0 ;while true do if ((((3047 -(167 + 1301)) + 1928)>(4118 -(798 + 747))) and (v229==(4 -3))) then v184=1 -(0 -0) ;break;end if ((v229==0) or ((4423 -1309)<(203 + 963))) then v185=v91[2];v186=v89[v91[11 -8 ]];v229=1;end end end if (((7140 -2533)>=(1399 + 2298)) and (v184==(1883 -((1728 -(681 + 57)) + 892)))) then v89[v185 + 1 ]=v186;v89[v185]=v186[v91[5 -1 ]];break;end end break;end if ((v183==(167 -(74 + 93))) or ((2558 -1533)>(3721 -(168 + 1546)))) then v184=0 + 0 ;v185=nil;v183=1 -0 ;end end end elseif ((v92>(41 -18)) or ((2839 -((5764 -4088) + 149))<=(1683 -(290 + 428)))) then v89[v91[5 -3 ]]=v37[v91[3]];else v67=v91[2 + 1 ];end elseif (((5185 -(106 + 127))>=2365) and (v92<=26)) then if (((1264 + 1850)<(11500 -6593)) and (v92>(78 -53))) then v89[v91[7 -5 ]]=v89[v91[8 -5 ]][v91[1390 -(64 + 1322) ]];else local v192=1906 -(1126 + 780) ;local v193;local v194;while true do if (((1991 -(3 + 110 + 98 + 4))>(436 -(139 + 216))) and (v192==(1 + 0))) then while true do if ((v193==(393 -(143 + 96 + 154))) or (4743<=(41 + 8))) then v194=v91[(1 + 3) -2 ];v89[v194](v13(v89,v194 + 1 + 0 ,v68));break;end end break;end if ((v192==(0 -0)) or ((410 -(118 + 59))==(1780 + 1062))) then v193=0 + 0 ;v194=nil;v192=(2 -1) + 0 ;end end end elseif ((v92==(4 + (1085 -(277 + 785)))) or ((1718 -(186 + (1480 -604)))>=(4092 -2154))) then local v195=(512 -(294 + 218)) -0 ;local v196;local v197;while true do if ((v195==0) or ((12001 -(9866 -(837 + 269)))>(1929 + 1385))) then v196=0 + 0 + 0 ;v197=nil;v195=2 -1 ;end if ((v195==(1 + 0)) or ((3764 -(116 + 110 + 420))<=(537 + 2))) then while true do if ((1316==1316) and (v196==(0 -0))) then v197=v91[(1280 -(46 + 577)) -(300 + 355) ];v89[v197]=v89[v197](v13(v89,v197 + 1 ,v91[3 + 0 ]));break;end end break;end end else local v198=0;local v199;local v200;while true do if ((v198==0) or ((2900 -(286 + 615))>3271)) then v199=0 -0 ;v200=nil;v198=(1 -0) + 0 ;end if ((v198==(1822 -(1804 + 17))) or ((4420 -(6 + 773))<480)) then while true do if ((v199==(1409 -(492 + 917))) or ((1670 + 986)<=(2268 -(1372 + 126)))) then v200=v91[1 + 1 ];v89[v200](v89[v200 + (791 -(484 + 306)) ]);break;end end break;end end end v67=v67 + 1 + 0 ;break;end if ((1022<1730) and (v97==0)) then local v107=885 -(826 + 59) ;while true do if ((((13950 -5799) -4725)<=(1079 + 2962)) and (v107==(1 -0))) then v97=1463 -(91 + 1371) ;break;end if (((3561 -((2569 -(72 + 1791)) + 115))<(10747 -6323)) and (v107==(0 + (0 -0)))) then v91=v83[v67];v92=v91[2 -1 ];v107=1 + 0 ;end end end end break;end end end end;v66=3;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
