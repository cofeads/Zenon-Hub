--[[
Made with Love
By cofead#7431
https://discord.gg/QKmhhq4MaR



]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==2) then v22=function()local v39=0 -0 ;local v40;while true do if (v39==(1 + (0 -0))) then return v40;end if (v39==(0 -(0 + 0))) then v40=v1(v16,v19,v19);v19=v19 + 1 + 0 + 0 ;v39=1 + 0 ;end end end;v23=nil;v23=function()local v41,v42=v1(v16,v19,v19 + (5 -3) );v19=v19 + (3 -1) ;return (v42 * (387 -131)) + v41 ;end;v18=3;end if (v18==1) then v21=nil;v21=function(v31,v32,v33)if v33 then local v72=(v31/(((151 + 116) -(80 + 185))^(v32-(1 -0))))%((5 -3)^(((v33-(2 -1)) -(v32-1)) + (1078 -(845 + 232)))) ;return v72-(v72%((1 -0) + 0)) ;else local v73=0;local v74;while true do if (v73==(0 -0)) then v74=(2 + 0)^(v32-(269 -(107 + 161))) ;return (((v31%(v74 + v74))>=v74) and (2 -1)) or (863 -(322 + 541)) ;end end end end;v22=nil;v18=2;end if (v18==5) then v27=v24;v28=nil;v28=function(...)return {...},v12("#",...);end;v18=6;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v34)if (v1(v34,2)==79) then v20=v0(v3(v34,1,1));return "";else local v75=0;local v76;while true do if (v75==0) then v76=v2(v0(v34,16));if v20 then local v106=v5(v76,v20);v20=nil;return v106;else return v76;end break;end end end end);v18=1;end if (v18==7) then v30=function(v35,v36,v37)local v43=0;local v44;local v45;local v46;while true do if (v43==0) then v44=v35[1];v45=v35[2];v43=1;end if (1==v43) then v46=v35[3];return function(...)local v82=1;local v83= -1;local v84={...};local v85=v12("#",...) -1 ;local function v86()local v87=v44;local v88=v45;local v89=v46;local v90=v28;local v91={};local v92={};local v93={};for v97=(0 -0) -0 ,v85 do if (((6606 -(536 + 1362))>=(10631 -8015)) and (v97>=v89)) then v91[v97-v89 ]=v84[v97 + (865 -(257 + 607)) ];else v93[v97]=v84[v97 + 1 + 0 ];end end local v94=(v85-v89) + 1 ;local v95;local v96;while true do local v98=0 -(0 + 0) ;local v99;local v100;while true do if ((((8649 -3316) -3760)>(175 + 139)) and (v98==(1837 -(297 + 1539)))) then while true do if ((v99==0) or (165>=(11958 -7101))) then v100=0 -0 ;while true do if ((v100==(0 + 0)) or (4409<=(4425 -(936 + 289)))) then local v114=0 -0 ;local v115;while true do if ((v114==(0 -0)) or ((7686 -5045)>=(10030 -5749))) then v115=0 + 0 ;while true do if (((2119 -(82 + 434))<=(354 + 2695)) and (v115==(510 -(40 + 470)))) then v95=v87[v82];v96=v95[(1 + 1) -1 ];v115=1 + 0 ;end if ((v115==1) or (1958<314)) then v100=1;break;end end break;end end end if (((113 + (1692 -(1535 + 98)))==(313 -(107 + 34))) and (v100==(1 + 0))) then if ((v96<=(389 -(265 + 111))) or ((2023 -((1426 -(740 + 399)) + 23))<(4651 -3626))) then if (((9210 -6695)==(2797 -(81 + 201))) and (v96<=(23 -17))) then if ((3695>=325) and (v96<=2)) then if (((5198 -2850)<(5788 -(1220 + 460))) and (v96<=(1266 -(301 + 59 + 906)))) then v93[v95[2]]=v30(v88[v95[7 -4 ]],nil,v37);elseif ((v96>(225 -(129 + 95))) or (((5215 -(17 + 183)) -(830 + 377))<(1498 -(672 + 263)))) then local v146=0;local v147;local v148;local v149;local v150;local v151;while true do if ((v146==(0 -0)) or (((2595 -1356) + 432)>3289)) then v147=281 -((1748 -(74 + 1437)) + 44) ;v148=nil;v146=3 -2 ;end if (((6293 -3430)==(6704 -3841)) and (((1763 -(17 + 307)) -(994 + 444))==v146)) then v149=nil;v150=nil;v146=1763 -(1525 + 236) ;end if ((v146==(5 -3)) or ((10402 -8006)<(1460 -784))) then v151=nil;while true do if ((0==v147) or ((42 + 3158 + 1278)<(253 + 3691))) then local v239=0 -0 ;while true do if (((7406 -4108)==3298) and (((1296 -791) -(107 + 397))==v239)) then v147=3 -2 ;break;end if (((563 -(1656 -1289))<=(2889 -1264)) and (v239==(0 + (1504 -(179 + 1325))))) then v148=v95[469 -(89 + 378) ];v149,v150=v90(v93[v148]());v239=1 + 0 ;end end end if (((7877 -3442)>=3196) and (v147==((1949 -(599 + 1347)) -2))) then v83=(v150 + v148) -(1890 -((3409 -(1506 + 492)) + 478)) ;v151=0 + 0 ;v147=1 + 1 ;end if (((2001 -(903 + 361))<=(4666 -(23 + 43))) and (v147==(1309 -(101 + 1206)))) then for v252=v148,v83 do local v253=720 -(239 + 481) ;local v254;local v255;while true do if ((((27249 -21533) -((2140 -(41 + 303)) + 190))>(5433 -2947)) and (v253==(0 + 0))) then v254=270 -(111 + 159) ;v255=nil;v253=1 -0 ;end if (((12812 -8511)>2354) and (v253==1)) then while true do if (((4862 -(1203 + 784))<=4321) and (v254==((0 -0) -0))) then v255=1577 -(1294 + 283) ;while true do if ((v255==(0 + 0)) or (4699<=(820 -597))) then v151=v151 + 1 ;v93[v252]=v149[v151];break;end end break;end end break;end end end break;end end break;end end else v93[v95[5 -3 ]]=v36[v95[3]];end elseif ((v96<=(770 -(241 + 525))) or ((2028 + 1590)>(6491 -(596 + 896)))) then if ((v96>(13 -10)) or ((8307 -4784)==(1420 -856))) then if ((((7377 -(123 + 1367)) -2905)==2982) and (v95[6 -4 ]==v93[v95[5 -1 ]])) then v82=v82 + 1 + 0 ;else v82=v95[2 + 1 ];end else local v154=0 + 0 ;local v155;local v156;while true do if ((v154==(1 + 0)) or ((120 + (665 -(319 + 153)))>((242 + 1724) -(233 + 225)))) then for v234=v155 + (3 -2) ,v95[10 -7 ] do v7(v156,v93[v234]);end break;end if ((v154==(0 + 0)) or ((5483 -3286)==359)) then local v220=0 + 0 ;while true do if ((v220==(0 -0)) or ((3124 -(773 + 1147))>=(346 + (1366 -308)))) then v155=v95[6 -4 ];v156=v93[v155];v220=3 -2 ;end if (((13521 -10434)>=(848 + 318)) and (v220==(1 + 0))) then v154=1 + 0 ;break;end end end end end elseif ((v96>(983 -(308 + 670))) or ((4920 -(946 + 935))<((3255 + 85) -((1814 -1042) + 194)))) then local v157=0 -0 ;local v158;local v159;local v160;local v161;while true do if (((5850 -(1564 + 140))==(402 + 3744)) and (v157==(0 -0))) then v158=v95[371 -(191 + 178) ];v159,v160=v90(v93[v158](v13(v93,v158 + 1 ,v95[3 + 0 + 0 ])));v157=1;end if ((((15 -10) -(7 -4))==v157) or ((4043 -(11 + 596))>(3612 + 1087))) then for v235=v158,v83 do local v236=0 + 0 ;while true do if (((1114 -740)<4541) and (v236==(0 + 0))) then v161=v161 + 1 + 0 ;v93[v235]=v159[v161];break;end end end break;end if (((2979 -(426 + 118))==(2457 -(19 + 3))) and (v157==(4 -(3 + 0)))) then v83=(v160 + v158) -1 ;v161=0 -(0 + 0) ;v157=4 -2 ;end end elseif ((v93[v95[2]]==v95[1592 -(805 + 783) ]) or (3813<((496 -161) + 533))) then v82=v82 + 1 ;else v82=v95[180 -(81 + 96) ];end elseif (((4784 -(1038 + 566))>=(911 -447)) and (v96<=(1492 -(607 + 876)))) then if (((13 + 3357 + 1235)>(1107 -589)) and (v96<=7)) then local v139=0 -0 ;local v140;local v141;while true do if ((873<=(11242 -7339)) and (v139==0)) then v140=0;v141=nil;v139=1 + 0 ;end if ((v139==(1503 -(754 + 748))) or ((256 + 4548)==((2210 -1359) -467))) then while true do if (((3970 -(951 + 1283))<=(8962 -6594)) and (v140==(0 -0))) then v141=v95[2 + 0 ];v93[v141]=v93[v141](v13(v93,v141 + (1583 -(368 + 1214)) ,v95[3 + 0 ]));break;end end break;end end elseif ((v96>(909 -(832 + 69))) or ((5027 -(1185 + 811))<(121 + 464))) then v93[v95[1 + 0 + 1 ]]();else for v209=v95[1 + 1 ],v95[1 + 2 ] do v93[v209]=nil;end end elseif ((v96<=(355 -(90 + 222 + 32))) or (3072<(2931 -(894 + 517)))) then if ((v96>(1787 -(734 + 1043))) or (((3884 -1777) + 881)<(2763 -2046))) then local v162=1341 -(924 + 417) ;local v163;local v164;local v165;while true do if ((v162==(1 + 0)) or ((1580 -(630 + (2059 -(535 + 629))))==(3602 -(1096 + 534)))) then v165=nil;while true do if (((1 -0)==v163) or (1447>=((21524 -16802) -1522))) then while true do if (((1239 + 765)>=(1529 -(316 + 225))) and (v164==(1966 -(327 + 1639)))) then v165=v95[2];v93[v165](v93[v165 + 1 + 0 ]);break;end end break;end if (((0 -0)==v163) or ((5774 -(482 + 319))<=(930 + 3096))) then v164=0 + 0 ;v165=nil;v163=1;end end break;end if ((v162==(0 + 0)) or ((12419 -8148)<=(1061 -820))) then v163=(490 -224) -(198 + 68) ;v164=nil;v162=1 + 0 ;end end else local v166=0 + 0 ;local v167;local v168;while true do if ((v166==(1437 -(1144 + 292))) or ((690 + 139)>(3802 -(2621 -(202 + 11))))) then while true do if ((v167==(0 -0)) or ((2776 -(1169 + 783))>=((1415 -(157 + 68)) + 3337))) then v168=v95[2 + 0 ];v93[v168](v13(v93,v168 + 1 + 0 ,v83));break;end end break;end if (((9779 -6247)>=(11205 -8523)) and (v166==(667 -(256 + 411)))) then local v222=0 -(0 -0) ;while true do if ((3261>=(1915 -(1135 + 573))) and (v222==(942 -(749 + 193)))) then v167=0 -0 ;v168=nil;v222=1 + 0 ;end if ((v222==(801 -(140 + 660))) or ((3298 -(35 + 312))>(10044 -6878))) then v166=1426 -(1086 + 339) ;break;end end end end end elseif ((v96>(21 -9)) or (913>(1916 -959))) then do return;end else local v169=0 + 0 ;local v170;local v171;while true do if ((((2716 + 40) -(694 + 569))<=(3464 -(421 + 801))) and (v169==(3 -2))) then v93[v170 + (236 -(57 + 178)) ]=v171;v93[v170]=v171[v95[525 -((1462 -(206 + 996)) + 261) ]];break;end if ((v169==0) or ((2855 -(845 + (1633 -1014)))<(195 + (984 -(124 + 364))))) then v170=v95[1 + 1 ];v171=v93[v95[1 + 2 ]];v169=757 -(706 + 50) ;end end end elseif ((((1468 + 2204) -1226)>=(3494 -(723 + 928))) and (v96<=(149 -(72 + 57)))) then if ((v96<=(35 -19)) or ((1298 + 256)==(4942 -2895))) then if (((1987 -(1422 + 57))<=(6052 -(858 + 474 + 258))) and (v96<=14)) then local v142=0;local v143;local v144;local v145;while true do if (((3477 -(619 + 338))<=4812) and (v142==(0 + 0 + 0))) then v143=v95[6 -4 ];v144=v93[v143];v142=2 -1 ;end if ((v142==(1405 -(513 + 891))) or ((2137 + 779)>(3334 + 227))) then v145=v95[3 -0 ];for v216=1,v145 do v144[v216]=v93[v143 + v216 ];end break;end end elseif (((2478 -((346 -(274 + 63)) + 104))>(2496 -(615 + 14))) and (v96>15)) then v93[v95[746 -(739 + 5) ]]=v95[13 -10 ]~=((1650 + 97) -(102 + 1645)) ;else local v173=0 -0 ;local v174;local v175;local v176;while true do if ((4821>=(2394 -(352 + (2359 -1628)))) and (v173==(348 -((890 -(239 + 526)) + 223)))) then v174=543 -(273 + 270) ;v175=nil;v173=1;end if ((v173==(1 + 0)) or ((1955 -(299 + 590))==1706)) then v176=nil;while true do if (((8448 -5047)>(3687 -(594 + 389))) and (v174==1)) then for v258=2 -1 , #v92 do local v259=715 -(621 + 94) ;local v260;while true do if (((5726 -3436)>=(1293 + 705)) and (v259==(0 + 0))) then v260=v92[v258];for v282=0 + 0 , #v260 do local v283=0;local v284;local v285;local v286;local v287;while true do if ((v283==2) or ((1306 -(221 + 75))>=(1592 + 2996))) then while true do if (((10569 -7807)>2017) and ((30 -(18 + 11))==v284)) then v287=v285[1 + 1 ];if (((1915 -1044)<=4235) and (v286==v93) and (v287>=v175)) then local v320=0;local v321;while true do if (((3273 -1243)>(1308 + 280)) and (v320==0)) then v321=0;while true do if (((1103 + 530)<=(6034 -(875 + (1821 -999)))) and (v321==0)) then v176[v287]=v286[v287];v285[1 + 0 ]=v176;break;end end break;end end end break;end if (((4298 -(1152 + 638))==(3002 -(199 + 295))) and (v284==(0 -0))) then v285=v260[v282];v286=v285[1];v284=1035 -(253 + 781) ;end end break;end if (((1978 -(566 + 937))>=401) and (v283==(0 -0))) then v284=(537 -(452 + 85)) + 0 ;v285=nil;v283=3 -(9 -7) ;end if ((v283==(1 + (24 -(18 + 6)))) or (492>(7151 -4759))) then v286=nil;v287=nil;v283=1062 -(663 + 397) ;end end end break;end end end break;end if (((10416 -7231)>468) and (v174==(1664 -(149 + 1515)))) then v175=v95[1 + 1 ];v176={};v174=1 + 0 ;end end break;end end end elseif ((v96<=((24 + 11) -17)) or ((693 + 927)>=(4041 -(551 + 354)))) then if ((v96==(84 -67)) or ((4212 -1401)>3303)) then local v177=1125 -(323 + 802) ;local v178;while true do if (((1523 -(60 + 547))<(4013 + 694)) and (v177==(0 + 0))) then v178=v95[2];v93[v178]=v93[v178]();break;end end else v93[v95[2 -0 ]]=v93[v95[3]];end elseif (((3715 -(43 + 192))>(3237 -(328 + 804))) and (v96>(34 -15))) then v93[v95[1653 -(1625 + (636 -(202 + 408))) ]]={};else v93[v95[6 -4 ]][v95[3]]=v93[v95[2 + 2 ]];end elseif ((v96<=24) or ((6012 -(230 + 1217))==4127)) then if ((v96<=(32 -10)) or ((1830 -787)>=(6433 -4243))) then if ((v96>(103 -82)) or ((4127 -(161 + 264))<=(300 + 277))) then local v184=0 + 0 ;local v185;while true do if ((v184==(0 -0)) or ((5065 -(86 + 1851))==2578)) then v185=v95[2];v93[v185](v13(v93,v185 + (2 -1) + 0 ,v95[(1977 -(191 + 1776)) -7 ]));break;end end else v93[v95[97 -((1929 -(1583 + 295)) + 44) ]]=v93[v95[3]][v95[4 + 0 ]];end elseif (((635 -(150 + (808 -(126 + 564))))<(3140 + 590)) and (v96==(898 -(146 + 729)))) then v82=v95[3];else v93[v95[2 + 0 ]]=v95[(6 + 3) -6 ];end elseif ((v96<=(3 + 23)) or ((68 + 363)>((832 + 10871) -8505))) then if ((v96==((1058 + 513) -(589 + 957))) or ((6428 -4417)>=2626)) then local v191=0 + 0 ;local v192;while true do if (((0 -0)==v191) or ((3046 -(459 + 702))>(5100 -(62 + 1642)))) then v192=v95[2];v93[v192]=v93[v192](v13(v93,v192 + (1 -0) ,v83));break;end end else v93[v95[(2627 -(942 + 780)) -(231 + 672) ]]=v37[v95[3 -0 ]];end elseif (((2666 -((2220 -914) + 528))==(2752 -(517 + 1403))) and (v96==(75 -48))) then local v195=0;local v196;local v197;local v198;local v199;while true do if ((v195==(394 -(101 + 291))) or ((6300 -4928)>(4779 -(395 + 1424)))) then while true do if ((((193 + 1712) -657)<(7123 -4206)) and (v196==0)) then local v244=0 + 0 ;while true do if ((v244==((451 + 941) -(348 + 1043))) or ((4899 -(1053 + 296))<(5250 -3500))) then v196=1 -0 ;break;end if (((2307 -(170 + 976))<4209) and (v244==(0 -0))) then v197=v88[v95[2 + 1 ]];v198=nil;v244=(1594 -(311 + 1279)) -3 ;end end end if (((4287 -(218 + 1080))>=(3376 -2409)) and (v196==(1 + 1))) then for v261=1 + 0 ,v95[1792 -((1759 -(888 + 47)) + 964) ] do local v262=1925 -(1578 + 347) ;local v263;local v264;while true do if ((v262==(0 -0)) or (((10650 -(1226 + 275)) -6312)<(1224 -(197 + 42)))) then v263=0 + 0 ;v264=nil;v262=(1928 -(6 + 169)) -(1747 + 5) ;end if ((2948>((7246 -4723) -1262)) and (v262==(2 -1))) then while true do if (((12109 -8337)<=((16496 -6513) -5260)) and (v263==(1183 -(497 + (3163 -2478))))) then if ((601<(291 + 1185)) and (v264[3 -(7 -5) ]==(52 -34))) then v199[v261-(1 + 0) ]={v93,v264[3]};else v199[v261-(1 + 0) ]={v36,v264[1724 -(557 + 1164) ]};end v92[ #v92 + (4 -3) ]=v199;break;end if (((967 + 772)<=4885) and (v263==0)) then local v294=0;while true do if (((3 -2)==v294) or ((2605 -1568)>(1446 + (7644 -5048)))) then v263=1 + 0 ;break;end if (((3644 -2046)<3543) and (v294==((1877 + 108) -(1474 + 511)))) then v82=v82 + 1 ;v264=v87[v82];v294=(825 + 1130) -(1340 + 395 + 219) ;end end end end break;end end end v93[v95[2 + (0 -0) ]]=v30(v197,v198,v37);break;end if ((((2658 -(62 + 29)) + 1621)>=(1344 + 377)) and (v196==(1 + 0))) then local v246=(1340 -905) -((661 -406) + 80 + 100) ;while true do if ((((10819 -(342 + 313)) -6170)==(17331 -13337)) and (v246==(1374 -(626 + 747)))) then v196=1 + 1 ;break;end if (((17849 -14074)>=1559) and (v246==(0 -0))) then v199={};v198=v10({},{__index=function(v272,v273)local v276=1590 -(634 + 956) ;local v277;local v278;while true do if ((v276==(0 + 0)) or ((2853 -(95 + (2475 -(700 + 883))))<(923 + 316))) then v277=0 + 0 ;v278=nil;v276=2 -1 ;end if ((v276==(1 -0)) or ((3652 -(75 + 356))==(2283 -(593 + 541)))) then while true do if ((v277==(935 -(550 + 153 + 232))) or ((267 + 1441 + 2536)==(6762 -2670))) then local v304=0;local v305;while true do if (((0 + 0)==v304) or ((6599 -(572 + 1087))<1291)) then v305=0 + 0 ;while true do if ((v305==0) or ((4658 -1944)==(77 + 1376))) then v278=v199[v273];return v278[1292 -(260 + 1031) ][v278[4 -2 ]];end end break;end end end end break;end end end,__newindex=function(v272,v273,v274)local v279=0 + 0 ;local v280;local v281;while true do if ((v279==(0 -(0 -0))) or ((138 + 4760)<(470 -211))) then v280=(66 -(42 + 24)) -0 ;v281=nil;v279=1 + 0 ;end if (((5733 -1731)>=(430 + 3488)) and (v279==(1883 -(616 + 1266)))) then while true do if ((v280==(310 -(103 + 207))) or ((1079 + 1567)>4183)) then v281=v199[v273];v281[(784 + 49) -((940 -(78 + 239)) + 209) ][v281[6 -4 ]]=v274;break;end end break;end end end});v246=1 + 0 ;end end end end break;end if ((v195==(3 -2)) or (2551==((11245 -5638) -3966))) then v198=nil;v199=nil;v195=89 -(49 + 38) ;end if (((8580 -5015)==3565) and (v195==(152 -(76 + 76)))) then v196=966 -(16 + 950) ;v197=nil;v195=105 -(99 + 5) ;end end else v93[v95[1 + (1 -0) ]][v95[3]]=v95[13 -9 ];end v82=v82 + 1 + 0 ;break;end end break;end end break;end if (((6177 -2704)>(2452 -(1222 + 286))) and (v98==0)) then v99=972 -(154 + 818) ;v100=nil;v98=1;end end end end A,B=v28(v11(v86));if  not A[1] then local v101=0;local v102;while true do if (v101==0) then v102=v35[4][v82] or "?" ;error("Script error at ["   .. v102   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end end end;return v30(v29(),{},v17)(...);end if (v18==3) then v24=nil;v24=function()local v47=0 + 0 ;local v48;local v49;local v50;local v51;while true do if (v47==(0 -0)) then v48,v49,v50,v51=v1(v16,v19,v19 + (1872 -(160 + 1709)) + 0 );v19=v19 + (17 -13) ;v47=3 -2 ;end if (v47==(1 -0)) then return (v51 * 16777216) + (v50 * (52082 + 13454)) + (v49 * (100 + 156)) + v48 ;end end end;v25=nil;v18=4;end if (v18==4) then v25=function()local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==(0 + 0 + 0 + 0)) then v53=v24();v54=v24();v52=1 + 0 ;end if (v52==(4 -1)) then if (v57==(1128 -(20 + 1108))) then if (v56==(0 + 0)) then return v58 * (0 + 0) ;else v57=1543 -(635 + 907) ;v55=0 + 0 ;end elseif (v57==(3087 -(269 + (1481 -(201 + 509))))) then return ((v56==(1500 -(196 + 1304))) and (v58 * ((764 -(704 + 59))/(176 -((1827 -(1129 + 656)) + 134))))) or (v58 * NaN) ;end return v8(v58,v57-(1369 -(112 + 234)) ) * (v55 + (v56/((6 -4)^(181 -129)))) ;end if (v52==((1424 -(1249 + 173)) + 0)) then v57=v21(v54,(1806 -(1747 + 46)) + 8 ,23 + 8 );v58=((v21(v54,32)==(1 + 0)) and  -(3 -2)) or (1 + 0) ;v52=2 + 1 ;end if (v52==(1 -0)) then v55=559 -(486 + 72) ;v56=(v21(v54,1,727 -((797 -217) + 127) ) * ((1655 -(379 + 1274))^((216 -161) -(16 + 7)))) + v53 ;v52=2 + 0 ;end end end;v26=nil;v26=function(v38)local v59;if  not v38 then local v77=0;while true do if (v77==(0 + 0)) then v38=v24();if (v38==((817 -499) -(65 + 253))) then return "";end break;end end end v59=v3(v16,v19,(v19 + v38) -(1 -0) );v19=v19 + v38 ;local v60={};for v70=731 -(426 + 304) , #v59 do v60[v70]=v2(v1(v3(v59,v70,v70)));end return v6(v60);end;v18=5;end if (v18==6) then v29=nil;v29=function()local v61=0;local v62;local v63;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v61==0) then local v81=0;while true do if (v81~=1) then else v61=1367 -(566 + 800) ;break;end if (v81~=0) then else v62=0 + 0 ;v63=nil;v81=1923 -(1054 + 868) ;end end end if ((5 -2)==v61) then v68=nil;v69=nil;v61=13 -9 ;end if (2~=v61) then else v66=nil;v67=nil;v61=918 -(259 + 656) ;end if (v61~=4) then else while true do if (1==v62) then local v103=0;while true do if (v103==(89 -(6 + 83))) then v65=nil;v66=nil;v103=1;end if (v103~=(3 -2)) then else v62=2;break;end end end if ((0 -0)~=v62) then else v63=0 + 0 ;v64=nil;v62=3 -2 ;end if (v62~=3) then else v69=nil;while true do local v107=0;local v108;while true do if (v107~=0) then else v108=0;while true do if (0==v108) then if (v63==0) then local v116=0;while true do if (v116~=(1259 -(55 + 1204))) then else local v120=0 + 0 ;while true do if (v120==1) then v116=1;break;end if (0~=v120) then else local v134=0;while true do if (v134==(0 -0)) then v64={};v65={};v134=2 -1 ;end if (v134~=1) then else v120=923 -(661 + 261) ;break;end end end end end if (v116~=2) then else v63=1 + 0 ;break;end if (v116==(893 -(379 + 513))) then local v121=0;while true do if (v121==(2 -1)) then v116=2 + 0 ;break;end if (0==v121) then v66={};v67={v64,v65,nil,v66};v121=1;end end end end end if (v63==1) then local v117=1244 -(150 + 1094) ;while true do if (1==v117) then for v125=320 -(314 + 5) ,v68 do local v126=101 -(61 + 40) ;local v127;local v128;local v129;local v130;local v131;while true do if (v126~=1) then else v129=nil;v130=nil;v126=2;end if (v126==(7 -5)) then v131=nil;while true do if (v127==0) then v128=0 -0 ;v129=nil;v127=322 -(226 + 95) ;end if (v127~=(476 -(429 + 46))) then else local v202=654 -(161 + 493) ;while true do if (v202~=0) then else v130=nil;v131=nil;v202=544 -(185 + 358) ;end if (v202==1) then v127=835 -(391 + 442) ;break;end end end if (v127==(2 + 0)) then while true do if (v128==0) then local v233=0;while true do if (v233==0) then v129=0;v130=nil;v233=1;end if (v233==1) then v128=1;break;end end end if (v128~=(1 + 0)) then else v131=nil;while true do if (v129~=0) then else local v247=0 -0 ;local v248;while true do if ((0 -0)==v247) then v248=0;while true do if (v248~=1) then else v129=1 + 0 ;break;end if (v248==(0 + 0)) then local v292=0;while true do if (v292==1) then v248=473 -(428 + 44) ;break;end if (v292~=0) then else local v300=0;while true do if (v300~=1) then else v292=1469 -(360 + 1108) ;break;end if (v300==(857 -(645 + 212))) then v130=v22();v131=nil;v300=1;end end end end end end break;end end end if (v129~=(1 + 0)) then else if (v130==(1 + 0)) then v131=v22()~=0 ;elseif (v130==(7 -5)) then v131=v25();elseif (v130==(8 -5)) then v131=v26();end v69[v125]=v131;break;end end break;end end break;end end break;end if (v126~=(1244 -(116 + 1128))) then else v127=0 + 0 ;v128=nil;v126=1 + 0 ;end end end v67[3]=v22();v117=2 + 0 ;end if (0==v117) then local v123=0;local v124;while true do if (v123==(0 + 0)) then v124=850 -(740 + 110) ;while true do if (v124~=(0 -0)) then else v68=v24();v69={};v124=1;end if (v124==1) then v117=3 -2 ;break;end end break;end end end if (v117==(1 + 1)) then v63=2;break;end end end v108=1;end if (v108~=1) then else if (2~=v63) then else local v118=0;while true do local v119=622 -(404 + 218) ;while true do if (v119==(1954 -(1099 + 855))) then if (v118==(1563 -(840 + 722))) then local v135=0 -0 ;local v136;while true do if (0==v135) then v136=0;while true do if (v136==(0 + 0)) then local v219=0 + 0 ;while true do if (v219~=(0 + 0)) then else for v250=1 + 0 ,v24() do v66[v250]=v24();end return v67;end end end end break;end end end if (v118==0) then local v137=0 + 0 ;while true do if (v137==(1962 -(514 + 1447))) then v118=1 -0 ;break;end if (v137==0) then for v203=1,v24() do local v204=0;local v205;local v206;while true do if (v204~=(213 -(183 + 30))) then else v205=0 -0 ;v206=nil;v204=1 + 0 ;end if (v204==(1 -0)) then while true do if (v205==(0 -0)) then v206=v22();if (v21(v206,227 -(184 + 42) ,1)==0) then local v265=0 + 0 ;local v266;local v267;local v268;while true do if (v265==2) then local v288=0;while true do if (v288==(0 + 0)) then if (v21(v267,1 + 0 ,1 + 0 )==1) then v268[2 + 0 ]=v69[v268[2]];end if (v21(v267,2 -0 ,2)==(1 + 0)) then v268[3]=v69[v268[1 + 2 ]];end v288=1536 -(544 + 991) ;end if (v288==(1602 -(1363 + 238))) then v265=3;break;end end end if (v265==1) then local v289=623 -(359 + 264) ;while true do if (0==v289) then v268={v23(),v23(),nil,nil};if (v266==(0 + 0)) then local v312=0 + 0 ;local v313;local v314;local v315;while true do if ((1028 -(190 + 838))==v312) then v313=0 -0 ;v314=nil;v312=654 -(105 + 548) ;end if (v312==(1413 -(814 + 598))) then v315=nil;while true do if (v313==0) then v314=0 + 0 ;v315=nil;v313=1;end if ((1 + 0)==v313) then while true do if (v314==0) then v315=0;while true do if (0==v315) then v268[1724 -(563 + 1158) ]=v23();v268[4]=v23();break;end end break;end end break;end end break;end end elseif (v266==1) then v268[1 + 2 ]=v24();elseif (v266==2) then v268[3]=v24() -(2^(28 -(7 + 5))) ;elseif (v266==3) then local v324=0 + 0 ;local v325;while true do if (v324==0) then v325=0;while true do if (v325~=(0 -0)) then else v268[3 + 0 ]=v24() -((5 -3)^(29 -13)) ;v268[2 + 2 ]=v23();break;end end break;end end end v289=1;end if (v289==1) then v265=2;break;end end end if (v265~=0) then else local v290=0 + 0 ;while true do if (v290==(1 -0)) then v265=1;break;end if (0==v290) then local v297=0;while true do if (v297==(0 + 0)) then v266=v21(v206,2,917 -(773 + 141) );v267=v21(v206,4,6);v297=1 + 0 ;end if (v297==(963 -(335 + 627))) then v290=1;break;end end end end end if (v265~=(6 -3)) then else if (v21(v267,3,3 + 0 )~=(3 -2)) then else v268[4]=v69[v268[4]];end v64[v203]=v268;break;end end end break;end end break;end end end for v207=1 + 0 ,v24() do v65[v207-(3 -2) ]=v29();end v137=1 + 0 ;end end end break;end end end end break;end end break;end end end break;end if (v62==2) then local v104=0 -0 ;local v105;while true do if (v104==0) then v105=0;while true do if (v105==(629 -(63 + 565))) then v62=3;break;end if (v105~=(837 -(806 + 31))) then else local v113=0 -0 ;while true do if (v113==(0 + 0)) then v67=nil;v68=nil;v113=1;end if (v113==1) then v105=1109 -(487 + 621) ;break;end end end end break;end end end end break;end if (v61==1) then v64=nil;v65=nil;v61=2;end end end;v30=nil;v18=7;end end end vv9(),...);end
